<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.sqlexercise.data.MainQuestionMapper">
    <resultMap id="MainQuestion" type="com.example.sqlexercise.po.MainQuestion">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="db_path" property="dbPath"/>
        <result column="file_name" property="fileName"/>
        <result column="created_at" jdbcType="TIMESTAMP" javaType="DATE" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" javaType="DATE" property="updatedAt"/>
        <result column="total_difficulty" property="totalDifficulty"/>
        <result column="sub_count" property="subCount"/>
    </resultMap>

    <select id="selectById" resultMap="MainQuestion">
        select *
        from main_question
        where id = #{mainId}
    </select>

    <select id="selectByPage" resultType="map">
        select main_question.id                       as mainId,
               main_question.title                    as title,
               main_question.sub_count                as subCount,
               coalesce(qs.submittedButNotPassNum, 0) as submittedButNotPassNum,
               coalesce(qs.passedNum, 0)              as passedNum
        from main_question
                 left join
             (select main_id,
                     sum(state = 1) as submittedButNotPassNum,
                     sum(state = 2) as passedNum
              from question_state
              where user_id = #{userId}
              group by main_id) as qs
             on main_question.id = qs.main_id
        order by main_question.id
        limit #{from}, #{size}
    </select>

    <select id="selectByPageFilterByTags" resultType="map">
        select main_question.id                       as mainId,
               main_question.title                    as title,
               main_question.sub_count                as subCount,
               coalesce(qs.submittedButNotPassNum, 0) as submittedButNotPassNum,
               coalesce(qs.passedNum, 0)              as passedNum
        from (select main_question.id as id,
                     main_question.title as title,
                     main_question.sub_count as sub_count
              from main_question, (select distinct sub_question.main_id as main_id
                                   from question_tags,
                                        sub_question
                                   where tag in
                                   <foreach collection="tags" item="tag" index="index"
                                            open="(" close=")" separator=",">
                                       #{tag}
                                   </foreach>
                                     and question_id in (select id as subId
                                                         from sub_question)
                                     and question_id = sub_question.id) as main_id_after_filter
              where main_question.id = main_id_after_filter.main_id) as main_question
                 left join
             (select main_id,
                     sum(state = 1) as submittedButNotPassNum,
                     sum(state = 2) as passedNum
              from question_state
              where user_id = #{userId}
              group by main_id) as qs
             on main_question.id = qs.main_id
        order by main_question.id
        limit #{from}, #{size};
    </select>

    <select id="countTotal" resultType="java.lang.Integer">
        select count(*)
        from main_question
    </select>

    <select id="countTotalAfterFilter" resultType="java.lang.Integer">
        select count(*)
        from (select distinct sub_question.main_id
              from question_tags,
                   sub_question
              where tag in
                        <foreach collection="tags" item="tag" index="index"
                                 open="(" close=")" separator=",">
                            #{tag}
                        </foreach>
                and question_id in (select id as subId
                                    from sub_question)
                and question_id = sub_question.id
              group by sub_question.main_id) as tmp;
    </select>

</mapper>
